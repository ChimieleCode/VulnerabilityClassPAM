from __future__ import annotations

from typing import Callable, Type


SoilAmplificationFunction: Type = Callable[[float, float], float]


# Function implementations
def A_soil_amplification(*args) -> float:
    """
    Returns soil amplification for soil type A according to NTC2018 Tab. 3.2.IV
    :return: amplification factor
    """
    return 1.


def B_soil_amplification(ag: float, F0: float) -> float:
    """
    Returns soil amplification for soil type B according to NTC2018 Tab. 3.2.IV
    :param ag: peak ground acceleration on bedrock [g]
    :param F0: amplification coefficient
    :return: amplification factor
    """
    return min(max(1.4 - .4 * F0 * ag, 1.), 1.2)


def C_soil_amplification(ag: float, F0: float) -> float:
    """
    Returns soil amplification for soil type C according to NTC2018 Tab. 3.2.IV
    :param ag: peak ground acceleration on bedrock [g]
    :param F0: amplification coefficient
    :return: amplification factor
    """
    return min(max(1.7 - .6 * F0 * ag, 1.), 1.5)


def D_soil_amplification(ag: float, F0: float) -> float:
    """
    Returns soil amplification for soil type D according to NTC2018 Tab. 3.2.IV
    :param ag: peak ground acceleration on bedrock [g]
    :param F0: amplification coefficient
    :return: amplification factor
    """
    return min(max(2.4 - 1.5 * F0 * ag, .9), 1.8)


def E_soil_amplification(ag: float, F0: float) -> float:
    """
    Returns soil amplification for soil type E according to NTC2018 Tab. 3.2.IV
    :param ag: peak ground acceleration on bedrock [g]
    :param F0: amplification coefficient
    :return: amplification factor
    """
    return min(max(2. - 1.1 * F0 * ag, 1.), 1.6)

