import numpy.typing as npt
from abc import ABC, abstractmethod
from typing import Union


class FragilityModel(ABC):
    """Abstract fragility class"""

    @abstractmethod
    def probability_of_exceedance(self, intensity_measure: Union[float, int, npt.NDArray]) -> Union[float, npt.NDArray]:
        pass

    @abstractmethod
    def intensity_measure(self, probability: Union[float, int, npt.NDArray]) -> Union[float, npt.NDArray]:
        pass

    @property
    @abstractmethod
    def beta(self) -> float:
        pass

    @property
    @abstractmethod
    def mean(self) -> float:
        pass


