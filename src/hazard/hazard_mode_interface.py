import numpy.typing as npt
from abc import ABC, abstractmethod
from typing import Union


class HazardModel(ABC):
    """Abstract hazard class"""

    @abstractmethod
    def probability_of_exceedance(self,
                                  intensity_measure: Union[float, int, npt.NDArray],
                                  percentile: float = .5) -> Union[float, npt.NDArray]:
        pass

    @abstractmethod
    def d_probability_of_exceedance(self,
                                    intensity_measure: Union[float, int, npt.NDArray],
                                    percentile: float = .5) -> Union[float, npt.NDArray]:
        pass

    @abstractmethod
    def intensity_measure(self,
                          probability: Union[float, int, npt.NDArray],
                          percentile: float = .5) -> Union[float, npt.NDArray]:
        pass


